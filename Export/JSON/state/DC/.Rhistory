?select
??select
?dplyr select
?dplyr::select
?read.json
??read json
source("U:/R/tomkit.R")
library(jsonlite)
library(reshape2)
library(dplyr)
mgp <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_state_longitudinal]")
minmax <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_minmax]")
head(minmax)
head(mgp)
mgp <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_longitudinal]")
head(mgp)
head(mgp,50)
mgp <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_longitudinal]")
mgp <- subset(mgp, subgroup %notin% c("Not-LEP","Not-Economy","Not-SPED"))
head(mgp,50)
mgp$mgp_1yr[which(is.na(mgp$mgp_1yr))] <- 'null'
mgp$mgp_2yr[which(is.na(mgp$mgp_2yr))] <- 'null'
mgp$school_code <- sapply(mgp$school_code, leadgr, 4)
head(mgp,50)
mgp <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_state_longitudinal]")
head(mgp,50)
minmax <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_minmax]")
mgp <- merge(mgp, minmax, by = c("year","subgroup","subject"), all.x=TRUE)
head(mgp,20)
table(mgp$subgroup)
mgp
mgp <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_state_longitudinal]")
source("U:/R/tomkit.R")
library(jsonlite)
library(reshape2)
library(dplyr)
mgp <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_state_longitudinal]")
mgp <- subset(mgp, subgroup %notin% c("Not-LEP","Not-Economy","Not-SPED"))
mgp <- subset(mgp, group_fay_size >= 10)
mgp$mgp_1yr[which(is.na(mgp$mgp_1yr))] <- 'null'
mgp$mgp_2yr[which(is.na(mgp$mgp_2yr))] <- 'null'
mgp$school_code <- sapply(mgp$school_code, leadgr, 4)
key_index <- c(1,2,3)
value_index <- c(6,7)
table(mgp$school_code)
head(mgp)
source("U:/R/tomkit.R")
library(jsonlite)
library(reshape2)
library(dplyr)
mgp <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_state_longitudinal]")
minmax <- sqlQuery(dbrepcard, "SELECT * FROM [dbo].[mgp_minmax]")
dim(mgp)
dim(minmax)
mgp <- merge(mgp, minmax, by = c("year","subgroup","subject"), all.x=TRUE)
dim(mgp)
source("U:/R/tomkit.R")
enr <- sqlQuery(dbrepcard_prod, "SELECT * FROM [dbo].[enrollment_state_exhibit]")
pcsb_demo <- read.csv("pcsb_demo_insert_11-20-2014.csv")
pcsb_demo$subgroup[which(pcsb_demo$subgroup == "Female")] <- "FEMALE"
pcsb_demo$subgroup[which(pcsb_demo$subgroup == "Male")] <- "MALE"
setwd("U:/LearnDC ETL V2/Enrollment Exhibit/JSON ETL")
source("U:/R/tomkit.R")
library(jsonlite)
state_enr <- sqlQuery(dbrepcard_prod, "SELECT * FROM [dbo].[enrollment_state_exhibit_pcsb_alterations]")
setwd('U:/LearnDC ETL V2/Export/CSV/state')
write.csv(state_enr, "Enrollment_State.csv", row.names=FALSE)
setwd("U:/LearnDC ETL V2/Export/JSON/state/DC")
key_index <- c(1,2,3)
value_index <- 4
nested_list <- lapply(1:nrow(state_enr), FUN = function(i){
list(key = list(state_enr[i,key_index]),
val = list(state_enr[i,value_index]))
})
json <- toJSON(nested_list)
json <- gsub("[[","",json, fixed=TRUE)
json <- gsub("]]","",json, fixed=TRUE)
newfile <- file("enrollment_equity.json", encoding="UTF-8")
sink(newfile)
cat('{', fill=TRUE)
cat('"timestamp": "',date(),'",', sep="", fill=TRUE)
cat('"org_type": "state",', sep="", fill=TRUE)
cat('"org_name": "District of Columbia",', sep="", fill=TRUE)
cat('"org_code": "dc",', sep="", fill=TRUE)
cat('"exhibit": {', fill=TRUE)
cat('\t"id": "enrollment_equity",', fill=TRUE)
cat('\t"data": ',json, fill=TRUE)
cat('\t}', fill=TRUE)
cat('}', fill=TRUE)
sink()
close(newfile)
## VALIDATE JSON
test <- readLines("enrollment.json")
validate(test)
